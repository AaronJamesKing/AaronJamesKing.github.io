<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ruby-on-rails on Aaron King</title>
    <link>https://www.aaronjamesking.com/tags/ruby-on-rails/</link>
    <description>Recent content in ruby-on-rails on Aaron King</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Oct 2020 12:00:00 -0400</lastBuildDate><atom:link href="https://www.aaronjamesking.com/tags/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AO Archive: Rendering Legacy Pages inside React</title>
      <link>https://www.aaronjamesking.com/posts/2019-07-19-react-legacy-views/</link>
      <pubDate>Sat, 24 Oct 2020 12:00:00 -0400</pubDate>
      
      <guid>https://www.aaronjamesking.com/posts/2019-07-19-react-legacy-views/</guid>
      <description>https://spin.atomicobject.com/2019/07/19/legacy-pages-react-component/
This is a blog post I wrote while working at Atomic Object. It explains a strategy for slowly migrating an application&amp;rsquo;s frontend from Ruby on Rails to React. I wrote the post shortly after implementing the idea for the first time, and good news â€“ the web app is still successfully using the LegacyPage and LegacyView components!
One known caveat is that things can get a little hairy when you use the back button if the legacy pages post forms.</description>
    </item>
    
  </channel>
</rss>
